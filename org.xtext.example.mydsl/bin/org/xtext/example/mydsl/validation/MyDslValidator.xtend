/*
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.validation

import org.xtext.example.mydsl.myDsl.MathExpression
import java.util.Set
import java.util.HashSet
import org.xtext.example.mydsl.myDsl.MathExp
import org.xtext.example.mydsl.myDsl.MyDslPackage
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MyDslValidator extends AbstractMyDslValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	@Check
	def checkNoRepeatedGlobalVarDeclaration(MathExpression mathExpression) {
	    val Set<String> declaredVariables = new HashSet<String>();
	    
	    for (MathExp mathExp : mathExpression.getExpressions()) {
	        val variableName = mathExp.getName();
	        
	        if (declaredVariables.contains(variableName)) {
	            error("Repeated global variable declaration: " + variableName, 
	                  MyDslPackage.Literals.MATH_EXP__NAME);
	        } else {
	            declaredVariables.add(variableName);
	        }
	    }
	}
	
}
